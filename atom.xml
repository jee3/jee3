<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jee3.github.io/"/>
  <updated>2020-06-02T08:56:10.500Z</updated>
  <id>http://jee3.github.io/</id>
  
  <author>
    <name>Jee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React多个系统之间登录登出逻辑的实现</title>
    <link href="http://jee3.github.io/React%E5%A4%9A%E4%B8%AA%E7%B3%BB%E7%BB%9F%E4%B9%8B%E9%97%B4%E7%99%BB%E5%BD%95%E7%99%BB%E5%87%BA%E9%80%BB%E8%BE%91%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://jee3.github.io/React%E5%A4%9A%E4%B8%AA%E7%B3%BB%E7%BB%9F%E4%B9%8B%E9%97%B4%E7%99%BB%E5%BD%95%E7%99%BB%E5%87%BA%E9%80%BB%E8%BE%91%E7%9A%84%E5%AE%9E%E7%8E%B0/</id>
    <published>2020-06-02T02:12:55.000Z</published>
    <updated>2020-06-02T08:56:10.500Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍 React 登录登出逻辑的一种实现方法。&lt;/p&gt;
&lt;p&gt;用户在注册页面进行注册表单提交，正确提交信息后，进入登录页面，登录页面检测用户是否已经登录（此处有多种方法，可以检测 cookie，我用的是检测 localStorage 是否有我登录时存的一个值）。&lt;/p&gt;
&lt;p&gt;如果直接在地址栏输入地址，检测到未登录状态，则返回到登录页面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/categories/FE/React/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React优化首屏加载时间之异步加载</title>
    <link href="http://jee3.github.io/React-first-screen-loading-optimization/"/>
    <id>http://jee3.github.io/React-first-screen-loading-optimization/</id>
    <published>2020-05-18T01:00:00.000Z</published>
    <updated>2020-06-03T05:41:41.951Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首屏白屏时间过长一直是前端优化的主要内容之一，此次优化采用了异步加载的方法。也就是用户输入网址进入首页的时候，只加载首页内容。其他页面等用户进入的时候再加载。&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/categories/FE/React/"/>
    
      <category term="性能优化" scheme="http://jee3.github.io/categories/FE/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/tags/React/"/>
    
      <category term="性能优化" scheme="http://jee3.github.io/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>React-router-dom的原理和使用介绍</title>
    <link href="http://jee3.github.io/react-router-dom-introduction/"/>
    <id>http://jee3.github.io/react-router-dom-introduction/</id>
    <published>2020-05-14T01:00:00.000Z</published>
    <updated>2020-06-03T05:41:52.807Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;路由配置一直是单页面应用里面很重要的一部分，本文就简单介绍一下&lt;/p&gt;
&lt;h1 id=&quot;basename-为所有地址添加基础路径&quot;&gt;&lt;a href=&quot;#basename-为所有地址添加基础路径&quot; class=&quot;headerlink&quot; title=&quot;basename 为所有地址添加基础路径&quot;&gt;&lt;/a&gt;basename 为所有地址添加基础路径&lt;/h1&gt;&lt;p&gt;这是一个很常见的需求，当产品要上线的时候，一个域名下有多个系统，那就需要在不同系统下分别统一路径。比如&lt;code&gt;www.example.com/A/testA/&lt;/code&gt;与&lt;code&gt;www.example.com/B/testB/&lt;/code&gt;，这样后端部署的时候也会很容易。&lt;/p&gt;
&lt;p&gt;配置也很简单，只需要在&lt;code&gt;BrowserRouter&lt;/code&gt;加上&lt;code&gt;basename&lt;/code&gt;属性就行了&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/categories/FE/React/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React中如何避免子组件的循环渲染</title>
    <link href="http://jee3.github.io/React%E4%B8%AD%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%BE%AA%E7%8E%AF%E6%B8%B2%E6%9F%93/"/>
    <id>http://jee3.github.io/React%E4%B8%AD%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%BE%AA%E7%8E%AF%E6%B8%B2%E6%9F%93/</id>
    <published>2020-05-12T02:12:55.000Z</published>
    <updated>2020-06-03T03:33:14.569Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在 React 开发中，有时候会遇到子组件循环渲染导致闪屏的问题，那如何避免呢？&lt;/p&gt;
&lt;p&gt;以下代码实现了通过点击父表格某一行的按钮，弹出子表格的模态框以显示子表格及其数据（原代码是父表格有两个按钮，分别弹出不同的子表格，不是本节重点，所以代码没有写那一部分）&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/categories/FE/React/"/>
    
      <category term="Ant-design" scheme="http://jee3.github.io/categories/FE/Ant-design/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="Ant-design" scheme="http://jee3.github.io/tags/Ant-design/"/>
    
      <category term="React" scheme="http://jee3.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Upload组件-文件选择后不立即上传</title>
    <link href="http://jee3.github.io/Upload%E7%BB%84%E4%BB%B6-%E6%96%87%E4%BB%B6%E9%80%89%E6%8B%A9%E5%90%8E%E4%B8%8D%E7%AB%8B%E5%8D%B3%E4%B8%8A%E4%BC%A0/"/>
    <id>http://jee3.github.io/Upload%E7%BB%84%E4%BB%B6-%E6%96%87%E4%BB%B6%E9%80%89%E6%8B%A9%E5%90%8E%E4%B8%8D%E7%AB%8B%E5%8D%B3%E4%B8%8A%E4%BC%A0/</id>
    <published>2020-05-07T07:53:37.000Z</published>
    <updated>2020-06-03T03:33:14.582Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;很多时候我们在用 Upload 组件上传文件的时候，选择文件后&lt;strong&gt;并不想立刻上传&lt;/strong&gt;，而是要&lt;strong&gt;等待其他表单内容一起上传&lt;/strong&gt;。方法就是不在 action 里面写上传地址，先将文件对象存起来，等 submit 按钮点击事件触发的时候再一起提交到请求地址里面。&lt;/p&gt;
&lt;p&gt;直接上代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/categories/FE/React/"/>
    
      <category term="Ant-design" scheme="http://jee3.github.io/categories/FE/Ant-design/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="Ant-design" scheme="http://jee3.github.io/tags/Ant-design/"/>
    
      <category term="React" scheme="http://jee3.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>console.log失效了？</title>
    <link href="http://jee3.github.io/console-log%E5%A4%B1%E6%95%88%E4%BA%86%EF%BC%9F/"/>
    <id>http://jee3.github.io/console-log%E5%A4%B1%E6%95%88%E4%BA%86%EF%BC%9F/</id>
    <published>2020-05-06T16:00:00.000Z</published>
    <updated>2020-06-02T08:56:35.840Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;console.log 作为前端工程师非常值得信赖的调试工具，居然失效了？？？没想到啊没想到，console.log 这么个浓眉大眼的家伙，居然也…&lt;/p&gt;
&lt;p&gt;先直接上代码&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/categories/FE/React/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Ant-design踩过的那些坑</title>
    <link href="http://jee3.github.io/Ant-design%E8%B8%A9%E8%BF%87%E7%9A%84%E9%82%A3%E4%BA%9B%E5%9D%91/"/>
    <id>http://jee3.github.io/Ant-design%E8%B8%A9%E8%BF%87%E7%9A%84%E9%82%A3%E4%BA%9B%E5%9D%91/</id>
    <published>2020-02-19T16:00:00.000Z</published>
    <updated>2020-06-03T03:33:14.569Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Ant-design 是 React 项目中主流的前端 UI 框架，虽然文档较为全面，但是在使用中还是有很多坑的，本文就集中整理一下。&lt;/p&gt;
&lt;h1 id=&quot;按需加载&quot;&gt;&lt;a href=&quot;#按需加载&quot; class=&quot;headerlink&quot; title=&quot;按需加载&quot;&gt;&lt;/a&gt;按需加载&lt;/h1&gt;&lt;p&gt;.babelrc 文件&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;plugins&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;@babel/plugin-proposal-class-properties&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;import&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;libraryName&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;antd&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;libraryDirectory&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;es&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;style&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="Ant-design" scheme="http://jee3.github.io/categories/FE/Ant-design/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="Ant-design" scheme="http://jee3.github.io/tags/Ant-design/"/>
    
  </entry>
  
  <entry>
    <title>《React——引领未来的用户界面开发框架》总结</title>
    <link href="http://jee3.github.io/React-%E5%BC%95%E9%A2%86%E6%9C%AA%E6%9D%A5%E7%9A%84%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/"/>
    <id>http://jee3.github.io/React-%E5%BC%95%E9%A2%86%E6%9C%AA%E6%9D%A5%E7%9A%84%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/</id>
    <published>2020-01-21T16:00:00.000Z</published>
    <updated>2020-05-27T11:15:49.865Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;所有代码示例：&lt;a href=&quot;http://git.io/vlcpa&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://git.io/vlcpa&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;4-数据流&quot;&gt;&lt;a href=&quot;#4-数据流&quot; class=&quot;headerlink&quot; title=&quot;4 数据流&quot;&gt;&lt;/a&gt;4 数据流&lt;/h1&gt;&lt;h2 id=&quot;PropTypes&quot;&gt;&lt;a href=&quot;#PropTypes&quot; class=&quot;headerlink&quot; title=&quot;PropTypes&quot;&gt;&lt;/a&gt;PropTypes&lt;/h2&gt;&lt;p&gt;提供了一种验证 props 的方式&lt;/p&gt;
&lt;h2 id=&quot;State&quot;&gt;&lt;a href=&quot;#State&quot; class=&quot;headerlink&quot; title=&quot;State&quot;&gt;&lt;/a&gt;State&lt;/h2&gt;&lt;p&gt;千万不能直接修改 this.state，永远记得要通过 this.setState 方法修改&lt;/p&gt;
&lt;p&gt;state 中应只保存最简单的数据，不要保存计算出的值&lt;/p&gt;
&lt;p&gt;不要尝试把 props 复制到 state 中，要尽可能将 props 当作数据源&lt;/p&gt;
&lt;p&gt;当不需要内部状态、refs 和生命周期函数时，将组件变成函数组件可以减少冗余和复杂性&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/categories/FE/React/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="React" scheme="http://jee3.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Git 进阶</title>
    <link href="http://jee3.github.io/git-pro/"/>
    <id>http://jee3.github.io/git-pro/</id>
    <published>2019-12-17T16:00:00.000Z</published>
    <updated>2020-06-02T12:09:23.057Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;HEAD 严格来说不是指向提交，而是指向 master，master 才是指向提交的，所以，HEAD 指向的就是当前分支。&lt;/p&gt;
&lt;h1 id=&quot;fatal-Could-not-read-from-remote-repository-的解决办法&quot;&gt;&lt;a href=&quot;#fatal-Could-not-read-from-remote-repository-的解决办法&quot; class=&quot;headerlink&quot; title=&quot;fatal: Could not read from remote repository.的解决办法:&quot;&gt;&lt;/a&gt;fatal: Could not read from remote repository.的解决办法:&lt;/h1&gt;&lt;p&gt;查看远端地址 &lt;code&gt;git remote –v&lt;/code&gt; 查看配置 &lt;code&gt;git config --list&lt;/code&gt; &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://jee3.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="http://jee3.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>《Javascript高级程序设计》总结</title>
    <link href="http://jee3.github.io/JS%E9%AB%98%E7%A8%8B/"/>
    <id>http://jee3.github.io/JS%E9%AB%98%E7%A8%8B/</id>
    <published>2019-11-22T16:00:00.000Z</published>
    <updated>2020-05-27T11:25:12.862Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;复制基本类型值的时候，会新创建一个。复制引用类型值的时候，只是复制指针，指针指向堆中同一个对象。&lt;/p&gt;
&lt;h1 id=&quot;5-引用类型&quot;&gt;&lt;a href=&quot;#5-引用类型&quot; class=&quot;headerlink&quot; title=&quot;5 引用类型&quot;&gt;&lt;/a&gt;5 引用类型&lt;/h1&gt;&lt;p&gt;到底是不是数组，可以用.isArray()，instanceof 在多个框架（两个以上全局执行环境）就不好用了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6gy1g8mz1tcg1mj30ew0dg75n.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;array.push():添加到数组末尾，返回新长度 array.pop():返回数组最后一一项 array.shift():移除并返回第一项 array.unshift():前端添加任意项，返回新长度&lt;/p&gt;
&lt;p&gt;sort()排序会将‘15’放在‘5’前面，因为比较第一个字符。可以接收一个用于比较的函数&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;compare&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value1, value2&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value2 - value1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr.sort(compare);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/categories/FE/JS%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/tags/JS%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>CSS单位</title>
    <link href="http://jee3.github.io/css-unit/"/>
    <id>http://jee3.github.io/css-unit/</id>
    <published>2019-11-02T16:00:00.000Z</published>
    <updated>2020-06-02T12:04:37.678Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;
        
      
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="CSS" scheme="http://jee3.github.io/categories/FE/CSS/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="CSS" scheme="http://jee3.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Flex布局</title>
    <link href="http://jee3.github.io/Flex%E5%B8%83%E5%B1%80/"/>
    <id>http://jee3.github.io/Flex%E5%B8%83%E5%B1%80/</id>
    <published>2019-10-27T16:00:00.000Z</published>
    <updated>2019-12-22T06:43:18.274Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Flex-基本概念&quot;&gt;&lt;a href=&quot;#Flex-基本概念&quot; class=&quot;headerlink&quot; title=&quot;Flex 基本概念&quot;&gt;&lt;/a&gt;Flex 基本概念&lt;/h1&gt;&lt;p&gt;flex：弹性布局&lt;/p&gt;
&lt;p&gt;行内元素也可以用 flex，webkit 内核的要加上-webkit&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意，设为 Flex 布局以后，子元素自动成为 flex item，并且其 float、clear 和 vertical-align 属性将失效。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6gy1g89lw0kne6j30fn099dgi.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="CSS" scheme="http://jee3.github.io/categories/FE/CSS/"/>
    
      <category term="Flex" scheme="http://jee3.github.io/categories/FE/CSS/Flex/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="CSS" scheme="http://jee3.github.io/tags/CSS/"/>
    
      <category term="Flex" scheme="http://jee3.github.io/tags/Flex/"/>
    
  </entry>
  
  <entry>
    <title>CSS基础</title>
    <link href="http://jee3.github.io/css-base/"/>
    <id>http://jee3.github.io/css-base/</id>
    <published>2019-10-27T16:00:00.000Z</published>
    <updated>2020-06-02T12:04:30.972Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;position&quot;&gt;&lt;a href=&quot;#position&quot; class=&quot;headerlink&quot; title=&quot;position&quot;&gt;&lt;/a&gt;position&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6gy1g870k95k7zj31a60naae8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;盒模型&quot;&gt;&lt;a href=&quot;#盒模型&quot; class=&quot;headerlink&quot; title=&quot;盒模型&quot;&gt;&lt;/a&gt;盒模型&lt;/h1&gt;&lt;h2 id=&quot;IE-盒模型&quot;&gt;&lt;a href=&quot;#IE-盒模型&quot; class=&quot;headerlink&quot; title=&quot;IE 盒模型&quot;&gt;&lt;/a&gt;IE 盒模型&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6gy1g8beap40nbj30xw0lewgw.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;标准盒模型&quot;&gt;&lt;a href=&quot;#标准盒模型&quot; class=&quot;headerlink&quot; title=&quot;标准盒模型&quot;&gt;&lt;/a&gt;标准盒模型&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6gy1g8beaz5fvzj30zk0l1tb5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="CSS" scheme="http://jee3.github.io/categories/FE/CSS/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="CSS" scheme="http://jee3.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>JS中New操作符做了什么</title>
    <link href="http://jee3.github.io/what-did-NEW-do/"/>
    <id>http://jee3.github.io/what-did-NEW-do/</id>
    <published>2019-10-21T16:00:00.000Z</published>
    <updated>2020-06-02T12:07:39.149Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;例-1&quot;&gt;&lt;a href=&quot;#例-1&quot; class=&quot;headerlink&quot; title=&quot;例 1&quot;&gt;&lt;/a&gt;例 1&lt;/h1&gt;&lt;p&gt;由以下两段代码可以看出，new 关键字帮我们做了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 obj 对象&lt;/li&gt;
&lt;li&gt;把新建的 obj 对象的_ _ proto__指向构造函数 Common 的 prototype&lt;/li&gt;
&lt;li&gt;构造函数的作用域会指向实例本身（新对象），this 也指向新对象&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;执行构造函数内部的代码，将属性添加给 person 中的 this 对象。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;不用手动 return，会自动返回新对象
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/categories/FE/JS%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/tags/JS%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Javascript原型链</title>
    <link href="http://jee3.github.io/JS%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    <id>http://jee3.github.io/JS%E5%8E%9F%E5%9E%8B%E9%93%BE/</id>
    <published>2019-10-19T16:00:00.000Z</published>
    <updated>2019-10-24T03:23:56.951Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;原型链属性&quot;&gt;&lt;a href=&quot;#原型链属性&quot; class=&quot;headerlink&quot; title=&quot;原型链属性&quot;&gt;&lt;/a&gt;原型链属性&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;obj&#39;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;obj 有两个属性：一个是添加的 name 属性，一个是自带的_ _proto__属性，指向 window.Object.prototype。如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6gy1g84posdw50j30u00xvq8q.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/categories/FE/JS%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/tags/JS%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Javascript中的遍历</title>
    <link href="http://jee3.github.io/Javascript%E4%B8%AD%E7%9A%84%E9%81%8D%E5%8E%86/"/>
    <id>http://jee3.github.io/Javascript%E4%B8%AD%E7%9A%84%E9%81%8D%E5%8E%86/</id>
    <published>2019-10-18T16:00:00.000Z</published>
    <updated>2019-12-22T05:38:34.941Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;ES5 具有遍历数组功能的有 forEach、map、filter、some、every、reduce、reduceRight&lt;/p&gt;
&lt;h1 id=&quot;foreach：&quot;&gt;&lt;a href=&quot;#foreach：&quot; class=&quot;headerlink&quot; title=&quot;foreach：&quot;&gt;&lt;/a&gt;foreach：&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sum=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value,index,array&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    array[index] == value;    &lt;span class=&quot;comment&quot;&gt;//结果为true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sum+=value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(sum);    &lt;span class=&quot;comment&quot;&gt;//结果为 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6gy1g82mwnsv7zj30kk0qewhk.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/categories/FE/JS%E5%9F%BA%E7%A1%80/"/>
    
      <category term="ES6" scheme="http://jee3.github.io/categories/FE/ES6/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/tags/JS%E5%9F%BA%E7%A1%80/"/>
    
      <category term="ES6" scheme="http://jee3.github.io/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>《大话数据结构》总结</title>
    <link href="http://jee3.github.io/data-structure/"/>
    <id>http://jee3.github.io/data-structure/</id>
    <published>2019-09-26T16:00:00.000Z</published>
    <updated>2020-06-02T12:03:57.139Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6ly1g7egtyc6bxj318s0pon25.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="计算机主修课程" scheme="http://jee3.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%BB%E4%BF%AE%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="数据结构" scheme="http://jee3.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%BB%E4%BF%AE%E8%AF%BE%E7%A8%8B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="计算机主修课程" scheme="http://jee3.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%BB%E4%BF%AE%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="数据结构" scheme="http://jee3.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript中的双波浪线是什么意思？</title>
    <link href="http://jee3.github.io/JavaScript%E4%B8%AD%E7%9A%84%E5%8F%8C%E6%B3%A2%E6%B5%AA%E7%BA%BF/"/>
    <id>http://jee3.github.io/JavaScript%E4%B8%AD%E7%9A%84%E5%8F%8C%E6%B3%A2%E6%B5%AA%E7%BA%BF/</id>
    <published>2019-09-23T16:00:00.000Z</published>
    <updated>2019-10-22T06:32:48.026Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;按位操作符&quot;&gt;&lt;a href=&quot;#按位操作符&quot; class=&quot;headerlink&quot; title=&quot;按位操作符&quot;&gt;&lt;/a&gt;按位操作符&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;按位操作符的 MDN 讲解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;按位操作符（Bitwise operators）将其操作数（operands）当作 32 位的比特序列（由 0 和 1 组成），而不是十进制、十六进制或八进制数值。例如，十进制数 9，用二进制表示则为 1001。按位操作符操作数字的二进制形式，但是返回值依然是标准的 JavaScript 数值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/006y8mN6ly1g7avoqt54fj32fr0u0qgz.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;tips：异或 ⊕ 和同或 ⨀ 是反函数（异或是俩不一样为 1，同或就是俩一样为 1）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OR 或，AND 与，XOR 异或，NOR 或非，NAND 与非，XNOR 异或非&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/categories/FE/JS%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="JS基础" scheme="http://jee3.github.io/tags/JS%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>assetsPublicPath</title>
    <link href="http://jee3.github.io/assets-public-path/"/>
    <id>http://jee3.github.io/assets-public-path/</id>
    <published>2019-08-06T16:00:00.000Z</published>
    <updated>2020-06-01T08:10:26.898Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;assetsPublicPath-相关配置&quot;&gt;&lt;a href=&quot;#assetsPublicPath-相关配置&quot; class=&quot;headerlink&quot; title=&quot;assetsPublicPath 相关配置&quot;&gt;&lt;/a&gt;assetsPublicPath 相关配置&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;当打包之后页面空白，字体图标和 mock 数据无法正常加载时，可能是 assetsPublicPath:’/‘的问题，先来了解一下配置属性的基本含义&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="FE" scheme="http://jee3.github.io/categories/FE/"/>
    
      <category term="Vue" scheme="http://jee3.github.io/categories/FE/Vue/"/>
    
      <category term="Webpack" scheme="http://jee3.github.io/categories/FE/Webpack/"/>
    
    
      <category term="FE" scheme="http://jee3.github.io/tags/FE/"/>
    
      <category term="Vue" scheme="http://jee3.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://jee3.github.io/git-commands/"/>
    <id>http://jee3.github.io/git-commands/</id>
    <published>2018-09-05T16:00:00.000Z</published>
    <updated>2020-06-02T12:06:13.544Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;git-常用命令&quot;&gt;&lt;a href=&quot;#git-常用命令&quot; class=&quot;headerlink&quot; title=&quot;git 常用命令&quot;&gt;&lt;/a&gt;git 常用命令&lt;/h1&gt;&lt;p&gt;git 命令备忘录(文末有彩蛋!!!)&lt;/p&gt;
&lt;h2 id=&quot;git-设置&quot;&gt;&lt;a href=&quot;#git-设置&quot; class=&quot;headerlink&quot; title=&quot;git 设置&quot;&gt;&lt;/a&gt;git 设置&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;Your Name&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;email@example.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://jee3.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="http://jee3.github.io/tags/Git/"/>
    
  </entry>
  
</feed>
